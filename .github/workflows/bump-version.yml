name: Changed-files

on:
  pull_request:
    branches:
      - main

jobs:
  find_changes:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    outputs:
      status: ${{ steps.check-labels.outputs.status }}
      subprojects: ${{ steps.filter.outputs.changes }}

    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          working-directory: contracts
          filters: |
            ibc:
              - 'javascore/ibc/**'
            lightclients:
              - 'javascore/lightclients/**'
      - run: |
          for f in {{ steps.filter.outputs.subprojects }}; do echo $f;done
          
      - name: Get javascore files that have changed
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files_yaml_from_source_file: .github/changed-files.yaml

      - name: Check Label
        id: check-labels
        uses: mheap/github-action-required-labels@v5
        with:
          mode: exactly
          count: 1
          labels: "semver:patch, semver:minor, semver:major"
          exit_type: success

      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.8

      - name: check if bump required
        if: steps.changed-files.outputs.ibc_any_changed == 'true' &&
          (contains(github.event.pull_request.labels.*.name, 'semver:patch') ||
          contains(github.event.pull_request.labels.*.name, 'semver:minor') ||
          contains(github.event.pull_request.labels.*.name, 'semver:major'))
        
        run: |
          if [ -n "$GITHUB_PR_LABEL_SEMVER_MAJOR" ]; then
            echo "bump major"
            bump_type=major
          elif [ -n "$GITHUB_PR_LABEL_SEMVER_MINOR" ]; then
            echo "bump minor"
            bump_type=minor
          elif [ -n "$GITHUB_PR_LABEL_SEMVER_PATCH" ]; then
            echo "bump patch"
            bump_type=patch
          else
            echo "no bump"
          fi
          current_version=$(awk -F"'" '/^version/ {print $2}' contracts/javascore/ibc/build.gradle)
          new_version=$(bash ./calculate_next_semver.sh "$current_version" "$bump_type" )
          echo $new_version
  # update:
  #   needs: find_changes
  #   strategy:
  #     matrix:
  #       subprojects: ${{ fromJSON(needs.find_changes.outputs.subprojects) }}
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v4
  #         with:
  #           fetch-depth: 0
  #       - run: echo ${{ matrix.subprojects }}
