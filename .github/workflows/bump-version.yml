name: Changed-files

on:
  pull_request:
    types:
      - closed

jobs:
  file-changes:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    outputs:
      status: ${{ steps.check-labels.outputs.status }}
      subprojects: ${{ steps.filter.outputs.changes }}

    name: Test changed-files
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: .github/changed-files.yaml
      - run: for f in ${{ steps.filter.outputs.changes }}; do echo $f;done

      - name: Get javascore files that have changed
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files_yaml_from_source_file: .github/changed-files.yaml

  update:
    needs: file-changes
    strategy:
      matrix:
        subproject: ${{fromJson(needs.file-changes.outputs.subprojects)}}
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: echo
        run: echo ${{ matrix.subproject }}

      - name: Set subproject as environment variable
        run: echo "SUBPROJECT=${{ matrix.subproject }}" >> $GITHUB_ENV

      - name: Check Label
        id: check-labels
        uses: mheap/github-action-required-labels@v5
        with:
          mode: exactly
          count: 1
          labels: "semver:patch, semver:minor, semver:major"
          exit_type: success

      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.8

      - name: Find new version
        # working-directory: contracts
        run: |
          if [ -n "$GITHUB_PR_LABEL_SEMVER_MAJOR" ]; then
            echo "bump major"
            bump_type=major
          elif [ -n "$GITHUB_PR_LABEL_SEMVER_MINOR" ]; then
            echo "bump minor"
            bump_type=minor
          elif [ -n "$GITHUB_PR_LABEL_SEMVER_PATCH" ]; then
            echo "bump patch"
            bump_type=patch
          else
            echo "no bump"
          fi
          project_dir=${SUBPROJECT//_/\/}
          current_version=$(awk -F"'" '/^version/ {print $2}' contracts/${project_dir}/build.gradle)
          new_version=$(bash ./calculate_next_semver.sh "$current_version" "$bump_type" )
          echo $new_version
          sed -i "s/0.1.1/0.1.2/g" contracts/${project_dir}/build.gradle
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Bump Version v${current_version} -> v${incremented_version}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
